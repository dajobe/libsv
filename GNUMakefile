PARSE_V2=1

#CC=clang
#SAN_FLAGS=-fsanitize=address -O1 -fno-omit-frame-pointer

DEBUG_FLAGS=-g3
#DEBUG_FLAGS=-g3 -DSV_DEBUG=3

SVLIBSRCS=sv.c option.c write.c common-parse.c
SVLIBHDRS=sv.h sv_internal.h

EXSRCS=example.c sv2c.c gen.c
EXAMPLES=example sv2c gen
TESTSRCS=svtest.c

SRCS=$(EXSRCS) $(SVLIBSRCS) $(TESTSRCS) $(SVLIBHDRS)
EXES=$(EXAMPLES)
TESTS=svtest

CLEANFILES=$(EXES) $(TESTS) \
stamp-h1

TEST_FILES=test1.csv \
zero.tsv \
one.tsv \
test1.tsv

FILES=README.md \
GNUMakefile \
AUTHORS ChangeLog COPYING COPYING.LIB INSTALL LICENSE.txt LICENSE-2.0.txt \
NOTICE NEWS README configure.ac Makefile.am \
$(TEST_FILES) \
$(SRCS)

PACKAGE=libsv
VERSION=1.0.0

PV=$(PACKAGE)-$(VERSION)
TARBALL=$(PV).tar.gz

LDFLAGS=$(DEBUG_FLAGS) $(SAN_FLAGS)
CPPFLAGS=$(DEBUG_FLAGS) -I. -DHAVE_STDLIB_H -DHAVE_UNISTD_H -DHAVE_ERRNO_H
CFLAGS=$(SAN_FLAGS)

ifdef PARSE_V2
SVLIBSRCS += parse2.c
CPPFLAGS += -DSV_PARSE_V2
else
SVLIBSRCS += parse.c
endif

SVLIBOBJS=$(SVLIBSRCS:.c=.o)

all: $(EXES)

# Library deps
sv.c: sv.h

# Object deps
example: example.o $(SVLIBOBJS)
svtest: svtest.o $(SVLIBOBJS)
sv2c: sv2c.o $(SVLIBOBJS)
gen: gen.o $(SVLIBOBJS)

# Source Deps
sv2c.c: sv.h
svtest.c: sv.h
example.c: sv.h
gen.c: sv.h

dist: $(FILES)
	rm -rf $(PV) && \
	mkdir $(PV) && \
	cp $(FILES) $(PV) && \
	tar cfz $(TARBALL) $(PV) && \
	rm -rf $(PV)

clean:
	rm -f *.o *~ *.tar.gz $(CLEANFILES)

check: $(TESTS)
	@rc=0; \
	for t in $(TESTS); do \
	  echo "Running test $$t"; \
	  ./$$t; \
	  status=$$?; \
	  if test $$status != 0; then \
	    rc=1; \
	  fi; \
	done; \
	exit $$rc
